/* Icon Color Generation */
@mixin icon-colors() {
    @each $name, $color in $icon-colors {
        &.#{$name} {
            color: $color;
        }
    }
}

/* Grid-template Generation */
@mixin grid-templates() {
    @for $_ from 1 through 12 {
        &.grid-cols-#{$_} {
            grid-template-columns: repeat($_, minmax(0, 1fr));
        }
        &.grid-rows-#{$_} {
            grid-template-rows: repeat($_, minmax(0, 1fr));
        }
    }

    &.grid-cols-auto {
        grid-template-columns: repeat(auto, minmax(0, 1fr));
    }
    &.grid-rows-auto {
        grid-template-rows: repeat(auto-fill, minmax(0, 1fr));
    }
}

/* Responsive Utility Mixins */
@mixin mobile-size-up {
    @media only screen and (min-width: 992px) {
        @content;
    }
}

@mixin mobile-size-down {
    @media only screen and (max-width: 991.98px) {
        @content;
    }
}

/* Body Text Mixins */
@mixin mainsail-body-text-large {
    font-family: $font;
    font-style: normal;
    font-weight: normal;
    font-size: 18px;
    line-height: 22px;
}

@mixin mainsail-body-text-regular {
    font-family: $font;
    font-style: normal;
    font-weight: normal;
    font-size: 16px;
    line-height: 20px;
}

@mixin mainsail-body-text-small {
    font-family: $font;
    font-style: normal;
    font-weight: normal;
    font-size: 12px;
    line-height: 16px;
}

@mixin mainsail-body-text-tiny {
    font-family: $font;
    font-style: normal;
    font-weight: normal;
    font-size: 10px;
    line-height: 12px;
}

// Label Text Mixins
@mixin mainsail-label-text-large {
    font-family: $font;
    font-weight: 500;
    font-style: normal;
    font-size: 16px;
    line-height: 20px;
}

@mixin mainsail-label-text-small {
    font-family: $font;
    font-weight: bold;
    font-style: normal;
    font-size: 12px;
    line-height: 16px;
}

// Button Text Mixins
@mixin mainsail-button-text-regular() {
    font-family: $font;
    font-style: normal;
    font-weight: 500;
    font-size: 16px;
    line-height: 18px;
}

@mixin mainsail-button-text-small() {
    font-family: $font;
    font-style: normal;
    font-weight: 500;
    font-size: 12px;
    line-height: 18px;
}

@mixin disabled {
    &:disabled {
        box-shadow: none;
        opacity: 0.5;
        cursor: not-allowed;
        @content;
    }
}

@mixin readonly {
    &:read-only {
        background: $mainsail-neutral-6;
        box-shadow: none;
        cursor: text;
        @content;
    }
}

@mixin hover {
    &:not([disabled]):not([active]):hover {
        @content;
    }
}

@mixin focus {
    &:not([disabled]):not([hover]):focus {
        outline: none;
        box-shadow: 0 0 0 2px $mainsail-blue-primary;
        @content;
    }
}

@mixin active {
    &:not([disabled]):not([hover]):active {
        outline: none;
        box-shadow: 0 0 0 2px $mainsail-blue-primary;
        @content;
    }
}

@mixin mainsail-button-intents {
    .filtering {
        background: $mainsail-green-middle;
        color: $mainsail-blue-light;
        border-color: $mainsail-green-middle;

        @include hover {
        }
    }

    .destructive {
        background: $mainsail-danger;
        color: $mainsail-blue-light;
        border-color: $mainsail-danger;
    }
}

/// Slightly lighten a color
/// @access public
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
    @return mix(white, $color, $percentage);
}

/// Slightly darken a color
/// @access public
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
    @return mix(black, $color, $percentage);
}

/* Spacing Utility Generators */
$spacing: (
    0: 0px,
    4: 4px,
    8: 8px,
    10: 10px,
    12: 12px,
    15: 15px,
    16: 16px,
    20: 20px,
    30: 30px,
    48: 48px,
);

@mixin spacing-modifiers($attribute: "margin") {
    @each $name, $size in $spacing {
        &-#{$name} {
            #{$attribute}: $size !important;
        }
    }
}

@mixin color-modifiers($attribute: "background-color") {
    @each $name, $color in $blue {
        &-blue-#{$name} {
            #{$attribute}: $color !important;
        }
    }
    @each $name, $color in $green {
        &-green-#{$name} {
            #{$attribute}: $color !important;
        }
    }
    @each $name, $color in $violet {
        &-violet-#{$name} {
            #{$attribute}: $color !important;
        }
    }
    @each $name, $color in $orange {
        &-orange-#{$name} {
            #{$attribute}: $color !important;
        }
    }
    @each $name, $color in $red {
        &-red-#{$name} {
            #{$attribute}: $color !important;
        }
    }
    @each $name, $color in $pink {
        &-pink-#{$name} {
            #{$attribute}: $color !important;
        }
    }
    @each $name, $color in $neutral {
        &-neutral-#{$name} {
            #{$attribute}: $color !important;
        }
    }
}
