(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6308],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2640:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:3,title:"Building Components"},l="Building a Component",p={unversionedId:"development/building-components",id:"development/building-components",isDocsHomePage:!1,title:"Building Components",description:"Using Generators \ud83e\uddde\u200d\u2642\ufe0f",source:"@site/docs/development/building-components.md",sourceDirName:"development",slug:"/development/building-components",permalink:"/docs/development/building-components",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/development/building-components.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Building Components"},sidebar:"tutorialSidebar",previous:{title:"Style Guide",permalink:"/docs/development/style-guide"},next:{title:"Adding Icons",permalink:"/docs/development/add-icons"}},c=[{value:"Using Generators \ud83e\uddde\u200d\u2642\ufe0f",id:"using-generators-\ud83e\uddde\u2642\ufe0f",children:[{value:"Generate a new component",id:"generate-a-new-component",children:[]}]},{value:"Writing the Component \u270d\ufe0f",id:"writing-the-component-\ufe0f",children:[]},{value:"Writing the Stories \ud83d\udcda",id:"writing-the-stories-",children:[{value:"A Storybook story is:",id:"a-storybook-story-is",children:[]},{value:"What deserves a Story?",id:"what-deserves-a-story",children:[]}]},{value:"Writing the Tests \ud83e\uddea",id:"writing-the-tests-\ud83e\uddea",children:[]},{value:"Running Tests \ud83c\udfc3\u200d\u2642\ufe0f",id:"running-tests-\u2642\ufe0f",children:[]}],m={toc:c};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"building-a-component"},"Building a Component"),(0,a.kt)("h2",{id:"using-generators-\ud83e\uddde\u2642\ufe0f"},"Using Generators \ud83e\uddde\u200d\u2642\ufe0f"),(0,a.kt)("p",null,"Each component has a set of files associated with it:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<component>.js")," - where the bulk of the component is built"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<component>.scss")," - where the component styles live"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<component>.stories.js")," - where the component Storybook code lives"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<component>.test.js")," - jest / RTL tests"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"index.js")," - main export file for cleaner imports")),(0,a.kt)("p",null,"Thankfully, you don't have to manually create these each time you need to set up a new component."),(0,a.kt)("p",null,"Mainsail UI utilizes the fantastic ",(0,a.kt)("a",{parentName:"p",href:"https://plopjs.com/"},"Plop JS")," to make development a little easier by reducing the boilerplate needed and keeping you from starting with nothing."),(0,a.kt)("h3",{id:"generate-a-new-component"},"Generate a new component"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn scaffold component\n")),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Note: omitting the ",(0,a.kt)("inlineCode",{parentName:"p"},"component")," argument will result in multiple choice prompts"))),(0,a.kt)("p",null,"This will prompt you for the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Name"),": The name used throughout the project (files, folder, tests etc)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Description"),": The description will be used in the code comments which will in-turn, be used to auto-generate Storybook description (unless overridden via story configs)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Category"),": The Category is strictly for documentation purposes inside of Storybook")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/30707961/114441996-0d93f000-9b9a-11eb-90fe-8b327a8b9bfb.gif",alt:"Scaffolding Components"})),(0,a.kt)("h4",{id:"updating-generators"},"Updating Generators"),(0,a.kt)("p",null,"Note: If ever there is a need to update the scaffolding and generators, see the following for more information:"),(0,a.kt)("p",null,"Two pertinent areas exist for building out generation/scaffolding:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plopfile.js")," (where the cli configuration lives)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plop-templates/*")," (text manipulation and generation templating files)")),(0,a.kt)("p",null,"See also the ",(0,a.kt)("a",{parentName:"p",href:"https://plopjs.com/"},"Plop JS Docs")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"writing-the-component-\ufe0f"},"Writing the Component \u270d\ufe0f"),(0,a.kt)("p",null,"If you ran ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn scaffold component")," and followed the prompts, you have a fresh ",(0,a.kt)("inlineCode",{parentName:"p"},"<component>.js")," file waiting for you in the ",(0,a.kt)("inlineCode",{parentName:"p"},"src/components/<component>/")," folder."),(0,a.kt)("p",null,"Feel free to use an existing component like the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Badge />")," or the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Button />")," as a reference guide if needed."),(0,a.kt)("p",null,"The generated scaffolding should provide a decent starting point with the following structure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport PropTypes from "prop-types"; // Declare used props and their types\nimport { classify } from "utility/classify"; // A helpful className concatenator\n\nimport "./MyComponent.scss"; // The scss required for the component styles\n\n// Declare exported enums props up here\nexport const variants = {\n    ...\n}\n\n/**\n * MyComponent Description provided by plop scaffolding prompts (used by Storybook)\n **/\nexport const MyComponent = ({ className, children, ...props }) => {\n    return (\n        <div className={clsx("my-component-class", className)}>{children}</div>\n    );\n};\n\nMyComponent.propTypes = {\n    /** (Optional) click handler */\n    onClick: PropTypes.func,\n};\n\nMyComponent.defaultProps = {\n    // Specify the default values of any props here\n};\n\n// attach your prop enums to the component directly for convenient use to avoid magic strings in component implementation (see Getting Started)\nMyComponent.variants = variants\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"A few things of importance about the component structure:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The component & description name will be generated by the scaffold command prompts"),(0,a.kt)("li",{parentName:"ul"},"Functional react components are expected and required"),(0,a.kt)("li",{parentName:"ul"},"Prop-Types are expected and required"),(0,a.kt)("li",{parentName:"ul"},"Comments above the prop-types are utilized by Storybook for documenting prop tables")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"writing-the-stories-"},"Writing the Stories \ud83d\udcda"),(0,a.kt)("p",null,"Don't forget to start Storybook if you haven't:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn start\n")),(0,a.kt)("h3",{id:"a-storybook-story-is"},"A Storybook story is:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"an isolated use-case of a component"),(0,a.kt)("li",{parentName:"ul"},"able to provide a means of visual/functional operational testing on a unit and integration level"),(0,a.kt)("li",{parentName:"ul"},"just an exported react component (which means, you can use React and javascript to do whatever you want with it)")),(0,a.kt)("h3",{id:"what-deserves-a-story"},"What deserves a Story?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"if the component is supposed to behave a certain way, make a story for that behavior"),(0,a.kt)("li",{parentName:"ul"},"if you want to write a test for a specific behavior or action, make a story first (writing tests will be easier!)"),(0,a.kt)("li",{parentName:"ul"},"if you want to visually test a design aspect, make a story that displays that design (chromatic will visually diff changes off of stories)")),(0,a.kt)("p",null,"Stories have a scaffolded initial structure."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\n\nimport { MyComponent } from "./MyComponent";\n\nexport default {\n    title: "MyComponentCategory/MyComponent", // Determines the title and nesting structure for navigation in Storybook\n    component: MyComponent, // Actual component code\n    argTypes: {\n        // Arg types can be configured with more options for the docs and addons sections of Storybook (see Badges.stories.js)\n        ...CustomConfigThatYouMightUse,\n    },\n};\n\nconst Template = (args) => <MyComponent {...args} />; // Template component pattern aids in code reuse throughout stories\n\nexport const Primary = Template.bind({});\nPrimary.args = {\n    variant: MyComponent.variants.primary,\n    text: "Click me",\n};\n\nexport const Secondary = Template.bind({});\n// Defining args this way aids in code reuse and simplicity\nSecondary.args = {\n    variant: MyComponent.variants.secondary, // No magic strings here, ENUMS accessed directly from the component\n    text: "Click me",\n};\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"default export")," is the primary story for your component. It will dictate what shows up in the ",(0,a.kt)("strong",{parentName:"p"},"Docs")," tab/section of your Story."),(0,a.kt)("p",null,"Any additional ",(0,a.kt)("strong",{parentName:"p"},"named exports")," will be included as additional stories for your component."),(0,a.kt)("p",null,"Storybook will utilize their export name to generate naming for documentation. This behavior can be overridden (see below ",(0,a.kt)("em",{parentName:"p"},"Helpful Story Configuration"),")."),(0,a.kt)("p",null,"Note: the pattern used above for defining stories. This ",(0,a.kt)("inlineCode",{parentName:"p"},"Template.bind({})")," + ",(0,a.kt)("inlineCode",{parentName:"p"},"args")," pattern reduces the unique code necessary per story."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'const Template = (args) => <MyComponent {...args} />;\n\nexport const Primary = Template.bind({});\nPrimary.args = {\n    variant: MyComponent.variants.primary,\n    text: "Click me",\n};\n')),(0,a.kt)("h4",{id:"helpful-story-configuration"},"Helpful Story Configuration"),(0,a.kt)("p",null,"There are a lot of nuts and bolts that can be configured per story."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Supply a Custom Story Description")),(0,a.kt)("p",null,"For example, to configure docs tab/page descriptions per story, use the ",(0,a.kt)("inlineCode",{parentName:"p"},".parameters.docs.description.story")," property on your story export."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'export const Controlled = Checkbox.bind({});\n\nControlled.args = {\n    text: "A choice",\n    isChecked: true,\n};\nControlled.parameters = {\n    docs: {\n        description: {\n            story: "Can be a controlled component via the isChecked prop",\n        },\n    },\n};\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Rename a Story from its Auto-Generated Name")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'export const Primary = () => <Button text="Button" />;\n\nPrimary.storyName = "Fancier Name";\n')),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"For more information on writing stories ",(0,a.kt)("a",{parentName:"p",href:"https://storybook.js.org/docs/react/writing-stories/introduction"},"see the official site"),"."))),(0,a.kt)("h2",{id:"writing-the-tests-\ud83e\uddea"},"Writing the Tests \ud83e\uddea"),(0,a.kt)("p",null,"While it can be argued that Tests should come first, when working with Storybook, it makes sense to write stories before tests."),(0,a.kt)("p",null,"This means you will likely work in the following flow:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Build a Component"),(0,a.kt)("li",{parentName:"ol"},"Write a Story"),(0,a.kt)("li",{parentName:"ol"},"Write a test")),(0,a.kt)("p",null,"The reasoning here is because exported Story code can be reused in test code to prevent brittle tests and provide direct access to how the Component should operate (its use-case) coming directly from the story."),(0,a.kt)("p",null,"Here's an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// Checkbox.test.js\n\nimport React from "react";\nimport { render, screen } from "@testing-library/react";\nimport userEvent from "@testing-library/user-event";\nimport "@testing-library/jest-dom/extend-expect";\n\nimport {\n    Basic,\n    Indeterminate,\n    DefaultChecked,\n    IndeterminateGroup,\n} from "./Checkbox.stories"; // Imported stories are available for testing\n\nit("renders the proper icon with the indeterminate state", () => {\n    render(<Indeterminate {...Indeterminate.args} />); // Render the Story, not the Component, reuse its Story args!\n\n    expect(screen.getByRole("checkbox").indeterminate).toBe(true);\n    expect(screen.getByTestId("indeterminate-svg")).toBeInTheDocument();\n});\n\nit("renders the proper icon with the checked state", () => {\n    render(<Basic {...Basic.args} isChecked />);\n\n    expect(screen.getByRole("checkbox")).toBeChecked();\n    expect(screen.getByTestId("check-svg")).toBeInTheDocument();\n});\n')),(0,a.kt)("p",null,"Notice that because we exported the stories with the suggested pattern, we can ",(0,a.kt)("strong",{parentName:"p"},"reuse them within our tests")," along with their arguments that have been provided to the story!"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"This results in tests that are:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud83c\udf89 Shorter"),(0,a.kt)("li",{parentName:"ul"},"\ud83e\uddd0 Easier to read"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udd17 Stay up-to-date with their component/story with less duplication"),(0,a.kt)("li",{parentName:"ul"},"\ud83c\udfd6 Focus less on implementation details")),(0,a.kt)("h2",{id:"running-tests-\u2642\ufe0f"},"Running Tests \ud83c\udfc3\u200d\u2642\ufe0f"),(0,a.kt)("p",null,"If you have VS Code and the ",(0,a.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=Orta.vscode-jest"},"Jest Plugin")," (or a similar editor and plugin), you might be able to benefit from inline test runs.\nYour tests can be running while you write code and provide realtime feedback on the file you're currently working with."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/30707961/114428756-960a9480-9b8a-11eb-9f60-19bf50caf860.png",alt:"image"})),(0,a.kt)("p",null,"If you like it old school, feel free to run them from the command line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn test\n")))}u.isMDXComponent=!0}}]);